SHOC_ROOT=../../../..
include ${SHOC_ROOT}/config/config.mk

VPATH:=../../common

LDFLAGS     += ${CUDA_LDFLAGS}
CPPFLAGS    += -DLROWS=16 -DLCOLS=16 ${CUDA_INC}
LIBS        += ${CUDA_LIBS} -lSHOCCommon

TARGET      = ${SHOC_ROOT}/bin/Serial/CUDA/Stencil2D
MPITARGET   = ${SHOC_ROOT}/bin/TP/CUDA/Stencil2D

TARGETS=$(TARGET) 
ifeq ($(USE_MPI),yes)
TARGETS += ${MPITARGET}

# We will be using nvcc to drive the compile and link.  Nvcc does not know about
# the 'Wl' option accepted by the underlying g++ compiler, so we have to
# use nvcc's -X option.  If we do the natural thing (-Xlinker), the build
# fails because the -Wl option is not understood by the linker.  Thus
# we have to specify that it is a compiler option (-Xcompiler) even though
# we are linking.
CPPFLAGS 		+= -I${SHOC_ROOT}/src/mpi/common
CUDA_CPPFLAGS 	+= -Xcompiler "@MPI_CXXFLAGS@"
MPI_LIBS    = -Xcompiler "@MPI_LIBS@" -lSHOCCommonMPI -lstdc++
endif

COMMON_SRCS = CUDAStencil.cpp \
                CommonCUDAStencilFactory.cpp
OBJS        = main.o Stencil2Dmain.o CUDAStencilFactory.o CUDAStencilKernel.o ${COMMON_SRCS:.cpp=.o} 
MPI_OBJS    = main_mpi.o Stencil2Dmain_mpi.o MPICUDAStencilFactory_mpi.o MPICUDAStencil_mpi.o CUDAStencilKernel.o ${COMMON_SRCS:.cpp=.o}

LIBDEP_SER=$(SHOC_ROOT)/lib/libSHOCCommon.a 
LIBDEP_PAR=$(LIBDEP_SER) $(SHOC_ROOT)/lib/libSHOCCommonMPI.a 



all: ${TARGETS}

${TARGET}: ${OBJS}  $(LIBDEP_SER)
	${CUDA_CXX} -o $@ ${CXXFLAGS} ${LDFLAGS} ${OBJS} ${LIBS}

$(SHOC_ROOT)/lib/libSHOCCommonMPI.a:
	${MAKE} -C ${SHOC_ROOT}/src/mpi/common

${MPITARGET}: ${MPI_OBJS}  $(LIBDEP_PAR)
	${CUDA_CXX} -o $@ ${CXXFLAGS} ${LDFLAGS} ${MPI_LDFLAGS} ${MPI_OBJS} ${LIBS} ${MPI_LIBS}

clean:
	${RM} ${OBJS} ${MPI_OBJS} ${TARGET} ${MPITARGET}

distclean: clean
	${RM} ${DEPS} .buildflags *_cl.cpp Makefile

include ${SHOC_ROOT}/config/targets.mk

