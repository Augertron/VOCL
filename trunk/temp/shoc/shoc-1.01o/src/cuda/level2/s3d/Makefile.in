SHOC_ROOT=../../../..
include $(SHOC_ROOT)/config/config.mk

VPATH := ../../common

LDFLAGS+=$(CUDA_LDFLAGS)
CPPFLAGS+=$(CUDA_INC) -I../../include

BENCHMARKOBJ= \
 S3D.o 

BENCHMARKPROG = $(patsubst %.o,$(SHOC_ROOT)/bin/Serial/CUDA/%,$(BENCHMARKOBJ))
BENCHMARKPROG_MPI = $(patsubst %.o,$(SHOC_ROOT)/bin/EP/CUDA/%,$(BENCHMARKOBJ))

COMMONOBJ= \
 main.o

COMMONOBJ_MPI= \
 main_mpi.o

LIBS+= -lSHOCCommon

ALLOBJ=$(COMMONOBJ) $(BENCHMARKOBJ)
TARGETS=${BENCHMARKPROG}

ifeq ($(USE_MPI),yes)
ALLOBJ+=${COMMONOBJ_MPI}
TARGETS+=${BENCHMARKPROG_MPI}
CPPFLAGS+=-I${SHOC_ROOT}/src/mpi/common

# We will be using nvcc to drive the link.  Nvcc does not know about
# the 'Wl' option accepted by the underlying g++ compiler, so we have to
# use nvcc's -X option.  If we do the natural thing (-Xlinker), the build
# fails because the -Wl option is not understood by the linker.  Thus
# we have to specify that it is a compiler option (-Xcompiler) even though
# we are linking.
MPI_LIBS    = -Xcompiler "@MPI_LIBS@" -lstdc++
endif

all: ${TARGETS}

$(SHOC_ROOT)/bin/Serial/CUDA/%: %.o
	$(CUDA_CXX) -o $@ $(CXXFLAGS) $(LDFLAGS) $(COMMONOBJ) $< $(LIBS)

$(SHOC_ROOT)/bin/EP/CUDA/%: %.o
	$(CUDA_CXX) -o $@ $(CXXFLAGS) $(LDFLAGS) $(COMMONOBJ_MPI) $< $(LIBS) ${MPI_LIBS}

$(BENCHMARKPROG): $(COMMONOBJ)

$(BENCHMARKPROG_MPI): $(COMMONOBJ_MPI)

clean:
	${RM} $(ALLOBJ) $(BENCHMARKPROG) $(BENCHMARKPROG_MPI)

distclean: clean
	${RM} $(DEP) *~ .buildflags Makefile

include $(SHOC_ROOT)/config/targets.mk
